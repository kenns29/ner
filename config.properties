# host: the name of the host in which the database is located
host=fssand1.dtn.asu.edu
# port: the port number of the database
port=27888
# db: the name of the database
db=testingData
# coll: the name of the collection in which the data is stored
coll=test
# outputOptions:
# 0: append geoname to each ner
# 1: make a separate list for geoname
outputOption=0
# nerInputField: the input field where the text are extracted from for NER process
nerInputField=text
# ner: the output field where the ner results are stored
nerOutputField=ner
# geojsonListOutputField: the output field where the geojson object with the aggregated geo locations are stored
geojsonListOutputField=locationCollection
# geonameOutputField: the output field where the geoname results are stored if the outputOption is 1
geonameOutputField=geoname
# catID: specify the job ID of the data to process. If it is -1, perform on the whole database 
catID=-1
#######################
# userNer: specify whether to run NER on the user.location field
# true: run it
# false: do not run it
userNer=true
# userNerOutputField: specify the output field of the NER results from user.location field if the outputOption is 1
userNerOutputField=userNer
#######################
# parallel: specify if to run the program in parallel
# true: use multi-thread
# false: use single thread
parallel=true
# core: specify the number of threads to be used 
core=4
# queueSize: specify the maximum amount of tasks that can be queued, recommend to be 1 or 2 times the thread number  
queueSize=6
# useInsertionOrCreationTime:
# 0: use insertion time
# 1: use creation time
useInsertionOrCreationTime=0
# splitOption:
# 0: split simply by time intervals
# 1: split by the number of documents
splitOption=1
# splitIntervalInMillis: the time range in milliseconds of split interval if the split option is set to be 0
splitIntervalInMillis=900000 
# numDocsInThread: the maximum number of documents in each thread if the split option is set to be 1
numDocsInThread=500
#######################
# geoname: specify whether to run the geoname service
geoname=true
###################
# useTimeLimit: specify whether to use a upper or lower bound (or both) in timestamp for the data
useTimeLimit=false
# startTime: specify the start time in milliseconds for the data.  
# If the startTime is not specified, the default start time (the true start time of the database) is used
startTime=1413419084000
# startTime: specify the end time in milliseconds for the data.  
# If the endTime is not specified, the default end time (the true most current end time of the database) is used
endTime=1413777990000
# useObjectIdLimit: specify whether to use a upper or lower bound (or both) in ObjectId for the data. When useTimeLimit is true, it is assumed to be false
useObjectIdLimit=false
# startObjectId: specify the start object id for the data.  
# If the startObjectId is not specified, the default start ObjectId (the true start ObjectId of the database) is used
startObjectId=543f0de60cf2c02f417559c6
# endObjectId: specify the end object id for the data.  
# If the endObjectId is not specified, the default end ObjectId (the true most current end ObjectId of the database) is used
endObjectId=54485ae00cf2c02f41867afa
# When both useTimeLimit and useObjectIdLimit are false, the default start time and end time (or the default start object id and end object id) are picked, based of the split option

# stopAtEnd: specify whether to stop the process when the end is reached
stopAtEnd=false
######################
# useGeonameCache: specify whether to use the geoname cache
useGeonameCache=true
# cacheHost: specify the host of the cache database
cacheHost=fssand1.dtn.asu.edu
# cachePort: specify the port of the cache database
cachePort=27888
# cacheDatabase: specify the name of the cache database
cacheDatabase=testingData
# cacheCollection: specify the collection in which the geoname cache are stored
cacheCollection=cache
######################
# statusHttpServerHost: specify the name of the host to display the status web page
statusHttpServerHost=localhost
# statusHttpServerPort: specify the port of the host to dispay the status web page
statusHttpServerPort=5010